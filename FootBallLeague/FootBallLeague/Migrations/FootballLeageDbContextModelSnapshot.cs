// <auto-generated />
using System;
using FootBallLeague.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FootBallLeague.Migrations
{
    [DbContext(typeof(FootballLeageDbContext))]
    partial class FootballLeageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FootBallLeague.Models.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatchScore")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("FootBallLeague.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Ranking")
                        .HasColumnType("float");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("MatchTeam", b =>
                {
                    b.Property<Guid>("PlayedMatchesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayedTeamsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlayedMatchesId", "PlayedTeamsId");

                    b.HasIndex("PlayedTeamsId");

                    b.ToTable("MatchTeam");
                });

            modelBuilder.Entity("MatchTeam", b =>
                {
                    b.HasOne("FootBallLeague.Models.Match", null)
                        .WithMany()
                        .HasForeignKey("PlayedMatchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootBallLeague.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("PlayedTeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
